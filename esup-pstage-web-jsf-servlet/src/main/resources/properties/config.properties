###########################################################
# Config properties
#

tomcat.host=localhost
tomcat.port=:8080

base.url=http://localhost:8080/esup-pstage/

########################################################################
# Espace Entreprise
#	Nom donné à l'application, sera affiché dans mails, ... 
applicationName.entreprise=Espace Entreprise

#	BLOWFISH : clé de cryptage/décryptage
#	A generer pour le cryptage/decryptage des mots de passe des comptes salaries
# 	Commande ANT _genBfKey
blowfishKey=44047961683258514043109420211227652173

# Authentification Espace Entreprise pour les administrateurs
# CAS ou Shibboleth
# authentication=cas
# authentication=shibb --> nécessite l'attribut REMOTE_USER pour l'EPPN
#
adminAuthentication=cas

# Moderation des offres deposees par les entreprises
# Si true, les gestionnaires devront se connecter sur la partie entreprise pour diffuser les offres aux etudiants a la place des entreprises (qui ne le pourront plus)
# Attention : cela implique que votre université dispose des ressources pour suivre en temps et en heure les ajouts d'offres
#
#moderationActive=true
moderationActive=true

########################################################################
# PStage
#	Nom donné à l'application, sera affiché dans mails, ... 
applicationName.pstage=PStage


#The default value for attribute title of tag document, used to 
#generate the content of output tag TITLE, optional.
title=

# Code de l'universite
university.code=0623957P

# Décommenter la ligne correspondant au critère choisi : 
# - UFR ou ETAPE dans le cas où l'université a plusieurs centres de gestion.
# - MIXTE dans le cas où vous souhaitez pouvoir creer à la fois des etapes ET des ufr pour gérer le rattachement de vos conventions
# Pour ces deux précédents critere, avant de commencer la création d'Etapes ou d'UFR, on crée toujours en premier lieu un centre ETABLISSEMENT 
# auquel seront rattachées les conventions orphelines
# - S'il y a un seul centre de gestion dans votre universite auquel sont rattachées toute les conventions, décommenter "criterium.university.center=" 
# un critère ETABLISSEMENT sera automatiquement proposé lors de la création du centre
#criterium.university.center=
#criterium.university.center=UFR
criterium.university.center=ETAPE
#criterium.university.center=MIXTE

# Autoriser ou non la création d'une convention par les étudiants dont l'ETAPE/UFR n'est gérée pas aucun centre
# défaut : true
autoriserConventionsOrphelines=true

# Autoriser ou non les centres de gestion à bloquer l'impression de la convention par les étudiants
# défaut : false
autoriserCentresBloquerImpressionConvention=false

# Autoriser ou non les entreprises à réserver les offres aux centres de gestion
# défaut : false
autoriserEntrepriseAReserverOffre=true

#Autoriser ou non les étudiants à modifier les données entreprise (fiche signalétique, services, contacts) 
#lorsqu'il créent une convention 
# défaut : true
autoriserEtudiantAModifierEntreprise=false

#jour et mois de début d'une année universitaire 
# pour année universitaire commençant le 1er octobre, noter :
#start.year.day=01
#start.year.month=10
start.year.day=01
start.year.month=09

# Rendre obligatoire ou non le Code NAF (en non obligatoire, on aura le choix entre le code Naf et l'activitéPrincipale)
#codeNafObligatoire=true
codeNafObligatoire=false

########################################################################
# Services
#

#pstagedata.serviceUrl=http://localhost:8080/esup-pstagedata/service/
pstagedata.serviceUrl=http://localhost:8081/esup-pstagedata/service/

#remoteCriApogeeReadEnseignement.serviceUrl=http://localhost:8080/webServiceApogee/xfire/ReadEnseignement?wsdl
remoteCriApogeeReadEnseignement.serviceUrl=http://172.17.122.57:8080/webServiceApogee/xfire/ReadEnseignement?wsdl


########################################################################
# Dossier media (mettre le contexte/media)
# 

mediaPath.servlet=/esup-pstage/media


########################################################################
# Authentication
#

cas.url=https://auth.univ-artois.fr/cas

########################################################################
# Initialization
#
# Super Admin : logins separés par ";" si plusieurs, si super admin via shibb saisir l'eppn
init.superAdmin=farid.aitkarra

########################################################################
# SMTP
#

smtp.mailingListPStage=florian.garot@univ-artois.fr
smtp.mailingListEntr=florian.garot@univ-artois.fr

# Indiquer si Oui ou Non l'application envoi un mail sur "smtp.mailingListEntr" lors :
# (Si l'espace Entreprise n'est pas utilisé, laisser les valeurs par défaut)
# de la création d'un établissement
mailingListEntr.mailAvertissementAjoutEtab=true
# de la modification d'un établissement
mailingListEntr.mailAvertissementModifEtab=true
# de la suppression d'un établisement
mailingListEntr.mailAvertissementSupprEtab=true
# de la création d'une offre par une entreprise ou un administrateur entreprise
mailingListEntr.mailAvertissementAjoutOffre=true
# de la modification d'une offre par une entreprise ou un administrateur entreprise
mailingListEntr.mailAvertissementModifOffre=true
# de la suppression d'une offre par une entreprise ou un administrateur entreprise
mailingListEntr.mailAvertissementSupprOffre=true

smtp.host=mailserv.univ-artois.fr
smtp.user=
smtp.password=
smtp.fromEmail=no-reply@univ-artois.fr
smtp.fromName=ESUP-PStage
smtp.interceptAll=true
smtp.interceptEmail=florian.garot@univ-artois.fr
smtp.interceptName=Maintainer

########################################################################
# TIMEZONE

timezone=Europe/Paris

########################################################################
# CACHE

cache.path=/tmp/blank/cache

########################################################################
# DOSSIERS
#/!\ A placer en dehors du dossier de déploiement de l'application
# Répertoire de stockage des logos d'Entreprise 
uploadFiles.logosEntreprise.path=C:/esup-pstage-files/logosEntreprise
# Répertoire de stockage des fichiers attachés aux offres
uploadFiles.offres.path=C:/esup-pstage-files/offresEntreprise
# Répertoire de stockage des logos des centres de gestion
uploadFiles.logosCentre.path=C:/esup-pstage-files/logosCentre

# Taille maximum pour les fichiers : défaut 500ko | A définir en octets
uploadFiles.fileSizeLimit=512000
# Taille maximum pour les images/logo : défaut 50ko | A définir en octets
uploadFiles.imageSizeLimit=51200
#Extension de fichiers autorisés pour les fichiers associés aux offres
#Format : extensions séparées par des virgules
uploadFiles.offres.fileExtensions=doc, pdf, odt, docx
#Extension de fichiers autorisés pour les images/logo associés aux centres
#Format : extensions séparées par des virgules
uploadFiles.imageExtensions=jpg, jpeg, png, gif, bmp

# Download PDF
#
#The directory contains the xml and xsl files used to generate PDF
# chemin ou sera généré le fichier xsl - xml , repertoire ou est deploye l'application
#en local
xsl_xml.path=C:/apache-tomcat-6.0.29/webapps/esup-pstage/media/xml-xsl/

########################################################################
# Propriete attributs Ldap,
# ATTENTION :  Reporter chaque attribut dans la liste (propertie ldap.attributes)
########################################################################

########################################################################
# LDAP
#
ldap.url=ldap://ldaprep1.univ-artois.fr:389
ldap.userName=uid=read,dc=univ-artois,dc=fr
ldap.password=read
ldap.base=dc=univ-artois,dc=fr
ldap.dnSubPath=ou=people
ldap.uidAttribute=supannAliasLogin
ldap.displayNameAttribute=displayName
ldap.emailAttribute=mail
ldap.searchAttribute=cn

#
# Les proprietes suivantes etant des listes, leurs valeurs doivent etre separees par des virgules
#
# liste comprenant la totalité des attributs a recuperer dans le ldap lors d'une recherche d'utilisateur
ldap.attributes=supannEtuId,suppannAliasLogin,supannCivilite,sn,givenName,description,supannAffectation,eduPersonPrimaryAffiliation,supannEntiteAffectationPrincipal
# liste des attributs qui seront affichés lors d'une recherche d'utilisateur qui en renvoie plusieurs
ldap.searchDisplayedAttributes=supannEtuId,supannCivilite,sn,givenName,description,supannAffectation,eduPersonPrimaryAffiliation,supannEntiteAffectationPrincipale
# liste des attributs ldap a retrouver lors d'une recherche sur les composantes (utilisé uniquement en config tout ldap mais ne doit pas etre vide).
ldap.groupe.attributs=supannEtuId,suppannAliasLogin,supannCivilite,sn,givenName,description,supannAffectation,eduPersonPrimaryAffiliation,supannEntiteAffectationPrincipale
# liste des attributs ldap a retrouver lors d'une recherche d'etape (utilisé uniquement en config tout ldap mais ne doit pas etre vide).
ldap.step.attributs=ou,supannCodeEntite

# filtre recherche de personnes dans ldap
ldap.people=ou=People

##
# Attributs LDAP de l'utilisateur récupérés à la connection   
# mappés avec les nom d'attributs de la base ldap 
##
#valeur de l'attribut ldap.affiliation pour un employe, un prof ou un etudiant 
esup.employee=member,employee,STAFF
esup.faculty=member,employee,STAFF,faculty,researcher
esup.student=student
##
# Noms de paramètres LDAP dans l'appli mappés avec les 
# nom d'attributs de la base ldap 
##

#nom de l'attribut spécifiant l'affiliation d'une personne dans ldap
ldap.affiliation=eduPersonPrimaryAffiliation
#valeur de ldap.affiliation pour un etudiant
ldap.student.affiliation=student
#valeur(s) de l'attribut ldap.affiliation pour un administratif
#si plusieurs valeurs possibles, les séparer par une virgule
#ldap.employee.affiliation=employee,affiliate
ldap.employee.affiliation=STAFF,member,employee
#valeur de l'attribut ldap.affiliation pour un enseignant
#si plusieurs valeurs possibles, les s?parer par une virgule
#ldap.faculty.affiliation=faculty,affiliate
ldap.faculty.affiliation=STAFF,employee,faculty,researcher

#identifiant personne dans ldap
ldap.uid=supannAliasLogin
#nom personne
ldap.name=sn
#prenom personne 
ldap.firstName=givenName
#mail personne dans ldap
ldap.mail=mail


#ldap.code.principales.formations=attuhbcompType
ldap.code.principales.formations=supannTypeEntite
#ldap.valeurs.code.principales.formations=UFR
ldap.valeurs.code.principales.formations=UFR,COMPOSANTE

#numero etudiant
ldap.student.id=supannEtuId
#code etape d'inscription d'un etudiant
ldap.student.step=supannEtuEtape
#code ufr d'inscription d'un etudiant
ldap.student.affectation=supannEntiteAffectationPrincipale

#code ufr d'inscription d'un personnel
ldap.member.affectation=supannEntiteAffectationPrincipale
#attribut contenant le libelle Affectation
ldap.member.libelle.affectation=supannAffectation
#telephone personnel
ldap.member.phone=telephoneNumber
#campus personnel
ldap.member.campus=attuhbcampus
#bureau personnel
ldap.member.room=roomNumber
#batiment personnel
ldap.member.building=buildingName
#civilite personnel
ldap.member.civility=supannCivilite


#libelle composante dans ldap.composante
ldap.composante.libelle=ou
#code composante dans ldap.composante
ldap.composante.code=supannEntiteAffectationPrincipale
ldap.composante=ou=composante


#codes etapes dans ldap.etape
ldap.step.code=cn
ldap.step=ou=Etape

#type de personnel
#si plusieurs valeurs possibles, les separer par une virgule
#le type de personnel est utilise pour verifier si la personne est autorisee a etre tutrice de stage
#ex : ldap.member.type=attuhbtype,attuhbcatagorie
ldap.member.type=eduPersonPrimaryAffiliation

#type de personnel appartenant à ldap.faculty.affiliation mais ne pouvant être tuteur de stage 
#(ex. : lecteur, moniteur) : les valeurs sont séparées par une virgule ","
ldap.faculty.nonTutor=Moniteur,AMN,Lecteur (échange),Lecteur (personnel),HebergeAFME,HebergeAssociatio,HebergeAutres per,HebergeCCB,HebergeCDG 22,HebergeCNRS,HebergeNon titula,HebergeRennes 1,HebergeStagiaire,retraite,doctorant,temporaire


# si ldap.student.id correspond au COD_IND et non au COD_ETU pour APOGEE, indiquer cette propriété à false, sinon true
ldap.student.id.isCODETU=true
# si le code composante dans ldap est identique au code composante apogée (ex: 901), mettre à true
# sinon si le code composante est tout de même accessible dans ldap sous une autre branche
# possibilité de mettre à false et de récupérer via le filtre "ldap.composante.composanteFilter"
# le couple code composante ldap / code composante apogée pour en extraire le code apogée "ldap.composante.codeApogee"
ldap.composante.memeCodeApogeeLdap=true
ldap.composante.composanteFilter=
ldap.composante.codeApogee=


########################################################################################################################
#           Accès de données  du  personnel 
########################################################################################################################

#Il faut choisir une des trois  valeurs possibles. Ce choix est fontion de la manière dont chaque université accèdes à ces données :
# personalDataRepositoryLdap, dans ce cas les données sont recupérées via ldap
#personalDataRepositoryWS, dans on accède aux informations via des  web services notamment apogée.
#personalDataRepositoryCustom, dans ce cas une implementation personnalisée est fournie
donnees.personnel.referentiel=personalDataRepositoryWS

########################################################################################################################
#				 Accès des informations pour l'étudiant pour le domaine des étudiants
########################################################################################################################
#Il faut choisir une des trois  valeurs possibles. Ce choix est fonction de la manière dont chaque université accèdes à ces données :
#studentDataRepositoryLdap : dans ce cas les données sont recupérées via ldap
#studentDataRepositoryWS: dans ce cas on accède aux informations via des  web services notamment apogée.
#studentDataRepositoryCustom, dans ce cas une implementation personnalisée est fournie
donnees.etudiant.referentiel=studentDataRepositoryWS

########################################################################################################################
#				 Accès des composantes pour du personnel 
########################################################################################################################
#Il faut choisir une des trois  valeurs possibles. Ce choix est fonction de la manière dont chaque université accèdes à ces données :
#personalComponentRepositoryLdap : dans ce cas les données sont recupérées via ldap
#personalComponentRepositoryWS: dans ce cas on accède aux informations via des  web services notamment apogée.
#personalComponentRepositoryCustom, dans ce cas une implementation personnalisée est fournie

composantes.personnel.referentiel=personalComponentRepositoryWS

########################################################################################################################
#				 Accès des composantes pour l'étudiant pour le domaine des étudiants
########################################################################################################################
#Il faut choisir une des trois  valeurs possibles. Ce choix est fonction de la manière dont chaque université accèdes à ces données :
#studentComponentRepositoryLdap : dans ce cas les données sont recupérées via ldap
#studentComponentRepositoryWS: dans ce cas on accède aux informations via des  web services notamment apogée.
#studentComponentRepositoryCustom, dans ce cas une implementation personnalisée est fournie

composantes.etudiant.referentiel=studentComponentRepositoryWS

########################################################################################################################
#           Accès aux communes - GeographieMetier
########################################################################################################################
# Si vous utilisez les WS Apogée, il est conseillé d'en récupérer les communes françaises
# pour bénéficier du code Commune et de l'interface de saisie
# true : récupération des communes via Apogée
# false : pas de récupération des communes
# défaut : false

donnees.communes.recupererCommunesDepuisApogee=false


# parametre pour WS APOGEE
# parametre valeur O ou N permet de préciser si on souhaite utiliser le package Apogee PKB_ANNU 
# pour recuperer le login , adresse mail dans l'annuaire
temoinRecupAnnu=O

########################################################################################################################
#          Espace entreprise - Acces Application CVtheque
########################################################################################################################
# 
# Si vous utilisez que les entreprises accedent a l'application CVtheque
# par defaut valeur false
#false : pas d'utilisation de la CVtheque
#true : Espace Entreprise - l'entreprise peut acceder l'application CVtheque - prerequis avoir installe l'application CVtheque
cvtheque=false
# si cvtheque=true - renseigner url de l'application CVtheque
cvtheque.url=

########################################################################################################################
#          Mettre url pour assistance pour les utilisateurs
########################################################################################################################
#si vous voulez utilisez une url assistance pour les utilisateurs
#false : pas assistance
#true : apparaitra un bouton sur la barre de navigation - redirection vers url d'assistance (esup-helpdesk)
assistance=false
#si assistance=true - renseigner url assistance 
assistance.url=



